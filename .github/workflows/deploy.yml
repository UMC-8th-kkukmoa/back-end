name: Deploy To EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: .env 파일 생성
        run: |
          printf '%s\n' 'RDS_URL=${{ secrets.RDS_URL }}' >> .env
          printf '%s\n' 'RDS_USERNAME=${{ secrets.RDS_USERNAME }}' >> .env
          printf '%s\n' 'RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}' >> .env
          printf '%s\n' 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env
          printf '%s\n' 'AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}' >> .env
          printf '%s\n' 'AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}' >> .env
          printf '%s\n' 'AWS_REGION=${{ secrets.AWS_REGION }}' >> .env
          printf '%s\n' 'AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}' >> .env
          printf '%s\n' 'Client_ID=${{ secrets.KAKAO_CLIENT_ID }}' >> .env

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -x test


      - name: 빌드된 파일 이름 변경하기
        run: |
          JAR_PATH=$(ls ./build/libs/*.jar | head -n 1)
          mv "$JAR_PATH" ./project.jar

      - name: project.jar EC2에 전송 (tobe 폴더)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/back-end/tobe

      - name: .env 파일 EC2에 전송 (tobe 폴더)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: .env
          target: /home/ubuntu/back-end/tobe

      - name: SSH로 EC2에 접속 후 앱 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/back-end/current
            mkdir /home/ubuntu/back-end/current
            mv /home/ubuntu/back-end/tobe/project.jar /home/ubuntu/back-end/current/project.jar
            mv /home/ubuntu/back-end/tobe/.env /home/ubuntu/back-end/current/.env
            cd /home/ubuntu/back-end/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar project.jar > output.log 2>&1 &
            rm -rf /home/ubuntu/back-end/tobe
