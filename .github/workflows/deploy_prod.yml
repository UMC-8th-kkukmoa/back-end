name: Deploy To EC2 (Production)
g
on:
  pull_request:
    branches: [ main ]   # 서버 배포는 main 브랜치 PR에서만 실행
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: JDK 17 설치 (GitHub Actions 환경)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: gradlew 권한 부여
        run: chmod +x ./gradlew

      - name: .env 파일 생성 (운영용)
        run: |
          printf '%s\n' 'RDS_URL=${{ secrets.RDS_URL_PROD }}' >> .env
          printf '%s\n' 'RDS_USERNAME=${{ secrets.RDS_USERNAME }}' >> .env
          printf '%s\n' 'RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}' >> .env
          printf '%s\n' 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env
          printf '%s\n' 'AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}' >> .env
          printf '%s\n' 'AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}' >> .env
          printf '%s\n' 'AWS_REGION=${{ secrets.AWS_REGION }}' >> .env
          printf '%s\n' 'AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}' >> .env
          printf '%s\n' 'Client_ID=${{ secrets.KAKAO_CLIENT_ID }}' >> .env
          printf '%s\n' 'TOSS_SECRET_KEY=${{ secrets.TOSS_SECRET_KEY }}' >> .env
          printf '%s\n' 'REDIS_HOST=${{ secrets.REDIS_HOST }}' >> .env
          printf '%s\n' 'REDIS_PORT=${{ secrets.REDIS_PORT }}' >> .env
          printf '%s\n' 'REDIRECT_URI=${{ secrets.REDIRECT_URI }}' >> .env


      - name: 빌드 (bootJar만 수행)
        run: ./gradlew clean bootJar -x test

      - name : 빌드 확인
        run: ls -al ./build/libs

      - name: JAR 이름 변경
        run: |
          JAR_PATH=$(ls ./build/libs/*SNAPSHOT.jar | head -n 1)
          mv "$JAR_PATH" ./project.jar

      # 1️) Bastion Host를 통해 Private EC2에 JAR 전송
      - name: JAR 전송 (운영 EC2 via Bastion)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PRIVATE_IP_PROD }}              # 운영 서버 Private IP
          username: ${{ secrets.EC2_USERNAME_PROD }}
          key: ${{ secrets.EC2_PRIVATE_KEY_PROD }}
          proxy_host: ${{ secrets.BASTION_HOST_IP }}           # Bastion Host Public IP
          proxy_username: ${{ secrets.BASTION_USERNAME }}
          proxy_key: ${{ secrets.BASTION_KEY }}
          source: project.jar
          target: /home/ubuntu/back-end/tobe

      - name: project.jar 존재 확인
        run: ls -al ./project.jar

      - name: .env 전송 (운영 EC2 via Bastion)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PRIVATE_IP_PROD }}
          username: ${{ secrets.EC2_USERNAME_PROD }}
          key: ${{ secrets.EC2_PRIVATE_KEY_PROD }}
          proxy_host: ${{ secrets.BASTION_HOST_IP }}
          proxy_username: ${{ secrets.BASTION_USERNAME }}
          proxy_key: ${{ secrets.BASTION_KEY }}
          source: .env
          target: /home/ubuntu/back-end/tobe

      # 2️) Bastion Host를 통해 Private EC2에서 앱 실행
      - name: SSH via Bastion to Private EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PRIVATE_IP_PROD }}
          username: ${{ secrets.EC2_USERNAME_PROD }}
          key: ${{ secrets.EC2_PRIVATE_KEY_PROD }}
          proxy_host: ${{ secrets.BASTION_HOST_IP }}
          proxy_username: ${{ secrets.BASTION_USERNAME }}
          proxy_key: ${{ secrets.BASTION_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/back-end/current
            mkdir /home/ubuntu/back-end/current
            mv /home/ubuntu/back-end/tobe/project.jar /home/ubuntu/back-end/current/project.jar
            mv /home/ubuntu/back-end/tobe/.env /home/ubuntu/back-end/current/.env
            cd /home/ubuntu/back-end/current

            sudo fuser -k -n tcp 8080 || true
            env $(cat .env | xargs) nohup java -jar project.jar > output.log 2>&1 &

            echo "서버 기동 대기 중..."
            sleep 30

            if [ "$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health)" = "200" ]; then
              echo "서버 기동 성공"
            else
              echo "서버 기동 실패"
              cat output.log
              exit 1
            fi

            rm -rf /home/ubuntu/back-end/tobe